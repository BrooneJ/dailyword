/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/client/js/infiniteScrollMyPage.js":
/*!***********************************************!*\
  !*** ./src/client/js/infiniteScrollMyPage.js ***!
  \***********************************************/
/***/ (() => {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar container = document.querySelector(\".centerContainer\");\nvar detector = document.querySelector('.scroll-mydetecting');\nvar pageCounter = 2;\nvar hasMore = true;\n\nvar htmlMaking = function htmlMaking(words) {\n  for (var i = 0; i < words.length; i++) {\n    var div = document.createElement('div');\n    div.classList.add('wordContainer');\n    container.appendChild(div);\n    var divTPT = document.createElement('div');\n    var divBox = document.createElement('div');\n    var divInfor = document.createElement('div');\n    divTPT.classList.add('wordTPT');\n    divBox.classList.add('wordBox');\n    divInfor.classList.add('wordInfor');\n    var divTP = document.createElement('div');\n    divTP.classList.add('wordTP');\n    var spanTime = document.createElement('span');\n    spanTime.classList.add('wordTime');\n    spanTime.innerText = String(words[i].createdAt).split('T')[0].replaceAll('-', '. ');\n    var wordTitle = document.createElement('a');\n    wordTitle.classList.add('wordTitle');\n    wordTitle.setAttribute('href', \"/words/\".concat(words[i]._id));\n    wordTitle.innerText = words[i].title;\n    var wordPronun = document.createElement('span');\n    wordPronun.classList.add('wordPronun');\n    wordPronun.innerText = '[ ' + words[i].pronun + ' ]';\n    var wordMean = document.createElement('div');\n    wordMean.classList.add('wordMean');\n    var meanSpan1 = document.createElement('span');\n    meanSpan1.innerText = '의미:';\n    var meanSpan2 = document.createElement('span');\n    meanSpan2.innerText = words[i].mean[0];\n    var wordExample = document.createElement('div');\n    wordExample.classList.add('wordExample');\n    var examSpan1 = document.createElement('span');\n    examSpan1.innerText = '예문:';\n    var examSpan2 = document.createElement('span');\n    examSpan2.innerText = words[i].example[0];\n    var inforSpan1 = document.createElement('span');\n    var inforSpan2 = document.createElement('span');\n    var inforSpan3 = document.createElement('span');\n    inforSpan1.innerText = '출처:' + words[i].from;\n    var inforA = document.createElement('a');\n    inforA.setAttribute('href', \"/words/\".concat(words[i]._id));\n    inforA.innerText = '자세히 보기 →';\n    div.appendChild(divTPT);\n    divTPT.appendChild(divTP);\n    divTP.appendChild(wordTitle);\n    divTP.appendChild(wordPronun);\n    divTPT.appendChild(spanTime);\n    div.appendChild(divBox);\n    divBox.appendChild(wordMean);\n    wordMean.appendChild(meanSpan1);\n    wordMean.appendChild(meanSpan2);\n    divBox.appendChild(wordExample);\n    wordExample.appendChild(examSpan1);\n    wordExample.appendChild(examSpan2);\n    ;\n    div.appendChild(divInfor);\n    divInfor.appendChild(inforSpan1);\n    divInfor.appendChild(inforSpan2);\n    divInfor.appendChild(inforSpan3);\n    inforSpan3.appendChild(inforA);\n  }\n};\n\nvar loadItem = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var url_string, id, response, _yield$response$json, words;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url_string = window.location.href;\n            id = url_string.split('users/')[1];\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch(\"/api/\".concat(id, \"/myPages\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                pageCounter: pageCounter\n              })\n            });\n\n          case 5:\n            response = _context.sent;\n\n            if (!(response.status === 201)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 9;\n            return response.json();\n\n          case 9:\n            _yield$response$json = _context.sent;\n            words = _yield$response$json.words;\n\n            if (words.length !== 0) {\n              htmlMaking(words);\n            }\n\n            _context.next = 15;\n            break;\n\n          case 14:\n            hasMore = false;\n\n          case 15:\n            pageCounter++;\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](2);\n            console.error(_context.t0);\n\n          case 21:\n            container.appendChild(detector);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 18]]);\n  }));\n\n  return function loadItem() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar io = new IntersectionObserver(function (entries) {\n  if (entries.some(function (entry) {\n    return entry.intersectionRatio > 0;\n  })) {\n    if (hasMore) {\n      loadItem();\n    }\n  }\n});\n\nif (detector) {\n  io.observe(detector);\n}\n\n//# sourceURL=webpack://dailyword/./src/client/js/infiniteScrollMyPage.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/client/js/infiniteScrollMyPage.js"]();
/******/ 	
/******/ })()
;